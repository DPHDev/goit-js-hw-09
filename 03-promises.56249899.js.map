{"mappings":"YAAA,MAAMA,EAAOC,SAASC,cAAc,SACpC,IAAIC,EAAQF,SAASC,cAAc,oBAC/BE,EAAOH,SAASC,cAAc,mBAC9BG,EAASJ,SAASC,cAAc,qBAEpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQH,EAAUC,GAGlBG,EAAOJ,EAAUC,EAAA,GAElBA,EAAA,GAEP,CAEAR,EAAKgB,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,MAAMC,EAAWC,OAAOjB,EAAMkB,OACxBC,EAAUF,OAAOhB,EAAKiB,OACtBE,EAAYH,OAAOf,EAAOgB,OAChC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAWC,IACrB,GAALA,EACFlB,EAAckB,EAAGL,GACdM,MAAK,CAAClB,EAAUY,KACfO,QAAQC,IAAI,uBAAuBpB,QAAeY,MAAY,IAE/DS,OAAM,CAACrB,EAAUC,KAChBkB,QAAQC,IAAI,sBAAsBpB,QAAeY,MAAY,IAGjEb,EAAckB,EAAGF,GACdG,MAAK,CAAClB,EAAUsB,KACfH,QAAQC,IAAI,uBAAuBpB,QAAee,MAAW,IAE9DM,OAAM,CAACrB,EAAUe,KAChBI,QAAQC,IAAI,sBAAsBpB,QAAee,MAAW,GAC9D,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nlet delay = document.querySelector('[name = \"delay\"]');\nlet step = document.querySelector('[name = \"step\"]');\nlet amount = document.querySelector('[name = \"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(position, delay);\n      } else {\n        // Reject\n        reject(position, delay);\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const delayNum = Number(delay.value);\n  const stepNum = Number(step.value);\n  const amountNum = Number(amount.value);\n  for (let i = 1; i <= amountNum; i++) {\n    if (i == 1) {\n      createPromise(i, delayNum)\n        .then((position, delayNum) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delayNum}ms`);\n        })\n        .catch((position, delay) => {\n          console.log(`❌ Rejected promise ${position} in ${delayNum}ms`);\n        });\n    } else {\n      createPromise(i, stepNum)\n        .then((position, step) => {\n          console.log(`✅ Fulfilled promise ${position} in ${stepNum}ms`);\n        })\n        .catch((position, stepNum) => {\n          console.log(`❌ Rejected promise ${position} in ${stepNum}ms`);\n        });\n    }\n  }\n});\n\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayNum","Number","value","stepNum","amountNum","i","then","console","log","catch","step"],"version":3,"file":"03-promises.56249899.js.map"}